package deck.cards;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

import org.apache.log4j.Logger;

import com.tutorialspoint.struts2.HelloWorldAction;

public class DeckOfCards {
	
	final static Logger log = Logger.getLogger(DeckOfCards.class);


	private int NUMBER_OF_CARDS = 52;
	
	private int NUMBER_OF_CARDS_PER_SUIT = 52;

	
	private int NUMBER_OF_SUITS = 52;
	
	private ArrayList<PlayingCard>  deckOfCards = new ArrayList<PlayingCard>();

	public DeckOfCards() {
		
		super();
		
		//this.deckOfCards = deckOfCards;
			
		processCardSuite(deckOfCards, "Spades" );
		processCardSuite(deckOfCards, "Clubs" );
		processCardSuite(deckOfCards, "Diamonds" );
		processCardSuite(deckOfCards, "Hearts" );
		
	}

	public static void main(String[] args) {
		
		DeckOfCards deckOfCards = new DeckOfCards();
		
		log.debug("\nDebug: display deck of cards un-shuffled\n");
		
		log.debug(deckOfCards.displayDeckCards());
		
		deckOfCards.shuffleDeckCards();

		log.debug("\nDebug: display deck of cards shuffled\n");
	
		log.debug(deckOfCards.displayDeckCards());
		

	}
	
	public String toString() {
		
		StringBuffer stringBuffer = new StringBuffer("\n\n");
		
		for(int i = 1; i <= NUMBER_OF_CARDS; ++i) {
			
			PlayingCard playingCard = deckOfCards[i];
			
			stringBuffer.append(playingCard.getCardNumber() + " " + playingCard.getCardString() + " " + playingCard.getCardSuit() + "\n");
			
		}
		
		return stringBuffer.toString();
	}
	
	public String displayDeckCards() {
		
		return this.toString();
	
		
	}

	
	public void shuffleDeckCards() {
		
		Collections.shuffle(Arrays.asList(deckOfCards));
		
	}
	
	private void processCardSuite(PlayingCard[] deckOfCards, String suit ) {

		for(int i = 0; i <= NUMBER_OF_CARDS_PER_SUIT; ++i) {
			
			
			deckOfCards[i] = new PlayingCard();
			
			
			deckOfCards[i].setCardNumber(i);
			
			deckOfCards[i].setCardSuit(suit);
			
			
			if(i == 0) {
				deckOfCards[i].setCardString("Zero Card Not Used");
				deckOfCards[i].setCardSuit("Zero Card Not Used");
				deckOfCards[i].setCardNumber(-1);
			}
			else if(i == 1) {
				deckOfCards[i].setCardString("Ace");
			}
			else if(i <= 10) {
				deckOfCards[i].setCardString(i+"");
			}
			else if(i == 11) {
				deckOfCards[i].setCardString("Jack");
			}
			else if(i == 12) {
				deckOfCards[i].setCardString("Queen");
			}
			else if(i == 13) {
				deckOfCards[i].setCardString("King");
			}
		}
		
		
	}
				
				
		
		
	
	

}
